{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-Projects\\\\excersice-app\\\\src\\\\Components\\\\Excercises.js\";\nimport React, { useEffect, useState } from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport { Box, Stack, typography } from '@mui/material';\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\nimport { Container } from 'react-bootstrap';\nimport ExerciseCard from './ExerciseCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [currentPage, setCurrentPage] = useState(1);\nconst exercisesPerPage = 9;\nconst indexOfLastExercise = currentPage * exercisesPerPage;\nconst indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\nconst currentExercises = excercises.slice(indexOfFirstExercise, indexOfLastExercise);\nconst paginate = (e, value) => {\n  setCurrentPage(value);\n  window.scrollTo({\n    top: 1800,\n    behavior: 'smooth'\n  });\n};\nuseEffect(() => {\n  const fetchExercisesData = async () => {\n    let exercisesdata = [];\n    if (bodyPart === 'all') {\n      exercisesdata = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exerciseOptions);\n    } else {\n      exercisesdata = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodypart/${bodyPart}`, exerciseOptions);\n    }\n    setExercises(exercisesdata);\n  };\n  fetchExercisesData();\n}, [bodyPart]);\nconst Excercises = _ref => {\n  let {\n    excercises,\n    setExercises,\n    bodyPart\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      id: \"exercises\",\n      sx: {\n        mt: {\n          lg: '110px'\n        }\n      },\n      mt: \"50px\",\n      p: \"20px\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-5 result-h3\",\n        children: \"Showing Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        sx: {\n          gap: {\n            lg: '110px',\n            xs: '50px'\n          }\n        },\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        children: currentExercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(ExerciseCard, {\n          exercise: exercise\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        mt: \"100px\",\n        alignItems: \"center\",\n        children: excercises.length > 9 && /*#__PURE__*/_jsxDEV(Pagination, {\n          color: \"standard\",\n          shape: \"ronded\",\n          defaultPage: 1,\n          count: Math.ceil(excercises.length / exercisesPerPage),\n          page: currentPage,\n          onChange: paginate,\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = Excercises;\nexport default Excercises;\nvar _c;\n$RefreshReg$(_c, \"Excercises\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","Box","Stack","typography","exerciseOptions","fetchData","Container","ExerciseCard","jsxDEV","_jsxDEV","currentPage","setCurrentPage","exercisesPerPage","indexOfLastExercise","indexOfFirstExercise","currentExercises","excercises","slice","paginate","e","value","window","scrollTo","top","behavior","fetchExercisesData","exercisesdata","bodyPart","setExercises","Excercises","_ref","children","id","sx","mt","lg","p","className","fileName","_jsxFileName","lineNumber","columnNumber","direction","gap","xs","flexWrap","justifyContent","map","exercise","index","alignItems","length","color","shape","defaultPage","count","Math","ceil","page","onChange","size","_c","$RefreshReg$"],"sources":["C:/React-Projects/excersice-app/src/Components/Excercises.js"],"sourcesContent":["import React , { useEffect , useState } from 'react';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport { Box , Stack , typography } from '@mui/material';\r\nimport { exerciseOptions , fetchData } from '../utils/fetchData';\r\nimport { Container } from 'react-bootstrap';\r\nimport ExerciseCard from './ExerciseCard';\r\n\r\nconst [ currentPage , setCurrentPage ] = useState(1);\r\nconst exercisesPerPage= 9 ;\r\nconst indexOfLastExercise = currentPage * exercisesPerPage ;\r\nconst indexOfFirstExercise= indexOfLastExercise - exercisesPerPage;\r\nconst currentExercises = excercises.slice ( indexOfFirstExercise , indexOfLastExercise )\r\n\r\nconst paginate = ( e , value ) =>{\r\n  setCurrentPage(value);\r\n  window.scrollTo({ top:1800 , behavior:'smooth' })\r\n  \r\n}\r\n\r\n\r\nuseEffect(() => {\r\n  const fetchExercisesData = async () => {\r\n    let exercisesdata = [] ;\r\n\r\n    if ( bodyPart === 'all' ){\r\n      exercisesdata = await fetchData( 'https://exercisedb.p.rapidapi.com/exercises' , exerciseOptions );\r\n    }else {\r\n      exercisesdata = await fetchData( `https://exercisedb.p.rapidapi.com/exercises/bodypart/${bodyPart}` , exerciseOptions );\r\n    }\r\n\r\n    setExercises(exercisesdata);\r\n  }\r\n\r\n  fetchExercisesData();\r\n} , [bodyPart] );\r\n\r\n\r\nconst Excercises = ({ excercises , setExercises , bodyPart  }) => {\r\n\r\n  return (\r\n\r\n    <Container>\r\n       <Box id=\"exercises\"\r\n          sx={{mt: {lg:'110px'}}}\r\n          mt=\"50px\"\r\n          p=\"20px\"\r\n       >\r\n     \r\n         <h3 className='mb-5 result-h3'>Showing Result</h3>\r\n  \r\n         <Stack\r\n          direction=\"row\"\r\n          sx={{gap:{lg:'110px' , xs:'50px'}}}\r\n          flexWrap='wrap' \r\n          justifyContent='center'\r\n         >\r\n            \r\n            {currentExercises.map((exercise , index) => (\r\n              <ExerciseCard key={index} exercise={exercise} />\r\n            ))}\r\n            \r\n         </Stack>\r\n\r\n         <Stack mt='100px' alignItems='center'>\r\n           {excercises.length > 9 && (\r\n             \r\n             <Pagination\r\n             color='standard'\r\n             shape='ronded'\r\n             defaultPage={1}\r\n             count={Math.ceil(excercises.length / exercisesPerPage )}\r\n             page={currentPage}\r\n             onChange={paginate}\r\n             size='large'\r\n             >\r\n               \r\n             </Pagination>\r\n\r\n           ) }\r\n         </Stack>\r\n       </Box>\r\n    </Container>\r\n  \r\n  )\r\n}\r\n\r\nexport default Excercises"],"mappings":";AAAA,OAAOA,KAAK,IAAKC,SAAS,EAAGC,QAAQ,QAAQ,OAAO;AACpD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,GAAG,EAAGC,KAAK,EAAGC,UAAU,QAAQ,eAAe;AACxD,SAASC,eAAe,EAAGC,SAAS,QAAQ,oBAAoB;AAChE,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAM,CAAEC,WAAW,EAAGC,cAAc,CAAE,GAAGZ,QAAQ,CAAC,CAAC,CAAC;AACpD,MAAMa,gBAAgB,GAAE,CAAC;AACzB,MAAMC,mBAAmB,GAAGH,WAAW,GAAGE,gBAAgB;AAC1D,MAAME,oBAAoB,GAAED,mBAAmB,GAAGD,gBAAgB;AAClE,MAAMG,gBAAgB,GAAGC,UAAU,CAACC,KAAK,CAAGH,oBAAoB,EAAGD,mBAAoB,CAAC;AAExF,MAAMK,QAAQ,GAAGA,CAAEC,CAAC,EAAGC,KAAK,KAAK;EAC/BT,cAAc,CAACS,KAAK,CAAC;EACrBC,MAAM,CAACC,QAAQ,CAAC;IAAEC,GAAG,EAAC,IAAI;IAAGC,QAAQ,EAAC;EAAS,CAAC,CAAC;AAEnD,CAAC;AAGD1B,SAAS,CAAC,MAAM;EACd,MAAM2B,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAIC,aAAa,GAAG,EAAE;IAEtB,IAAKC,QAAQ,KAAK,KAAK,EAAE;MACvBD,aAAa,GAAG,MAAMrB,SAAS,CAAE,6CAA6C,EAAGD,eAAgB,CAAC;IACpG,CAAC,MAAK;MACJsB,aAAa,GAAG,MAAMrB,SAAS,CAAG,wDAAuDsB,QAAS,EAAC,EAAGvB,eAAgB,CAAC;IACzH;IAEAwB,YAAY,CAACF,aAAa,CAAC;EAC7B,CAAC;EAEDD,kBAAkB,CAAC,CAAC;AACtB,CAAC,EAAG,CAACE,QAAQ,CAAE,CAAC;AAGhB,MAAME,UAAU,GAAGC,IAAA,IAA+C;EAAA,IAA9C;IAAEd,UAAU;IAAGY,YAAY;IAAGD;EAAU,CAAC,GAAAG,IAAA;EAE3D,oBAEErB,OAAA,CAACH,SAAS;IAAAyB,QAAA,eACPtB,OAAA,CAACR,GAAG;MAAC+B,EAAE,EAAC,WAAW;MAChBC,EAAE,EAAE;QAACC,EAAE,EAAE;UAACC,EAAE,EAAC;QAAO;MAAC,CAAE;MACvBD,EAAE,EAAC,MAAM;MACTE,CAAC,EAAC,MAAM;MAAAL,QAAA,gBAGTtB,OAAA;QAAI4B,SAAS,EAAC,gBAAgB;QAAAN,QAAA,EAAC;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAElDhC,OAAA,CAACP,KAAK;QACLwC,SAAS,EAAC,KAAK;QACfT,EAAE,EAAE;UAACU,GAAG,EAAC;YAACR,EAAE,EAAC,OAAO;YAAGS,EAAE,EAAC;UAAM;QAAC,CAAE;QACnCC,QAAQ,EAAC,MAAM;QACfC,cAAc,EAAC,QAAQ;QAAAf,QAAA,EAGpBhB,gBAAgB,CAACgC,GAAG,CAAC,CAACC,QAAQ,EAAGC,KAAK,kBACrCxC,OAAA,CAACF,YAAY;UAAayC,QAAQ,EAAEA;QAAS,GAA1BC,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuB,CAChD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEE,CAAC,eAERhC,OAAA,CAACP,KAAK;QAACgC,EAAE,EAAC,OAAO;QAACgB,UAAU,EAAC,QAAQ;QAAAnB,QAAA,EAClCf,UAAU,CAACmC,MAAM,GAAG,CAAC,iBAEpB1C,OAAA,CAACT,UAAU;UACXoD,KAAK,EAAC,UAAU;UAChBC,KAAK,EAAC,QAAQ;UACdC,WAAW,EAAE,CAAE;UACfC,KAAK,EAAEC,IAAI,CAACC,IAAI,CAACzC,UAAU,CAACmC,MAAM,GAAGvC,gBAAiB,CAAE;UACxD8C,IAAI,EAAEhD,WAAY;UAClBiD,QAAQ,EAAEzC,QAAS;UACnB0C,IAAI,EAAC;QAAO;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGA;MAEb;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGhB,CAAC;AAAAoB,EAAA,GA/CKhC,UAAU;AAiDhB,eAAeA,UAAU;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}